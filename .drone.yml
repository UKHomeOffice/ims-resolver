---
kind: pipeline
name: default
type: kubernetes

environment:
  IMAGE_URL: quay.io/ukhomeofficedigital
  IMAGE_REPO: ims-resolver

trigger:
  branch:
    - master

steps:
  - name: setup
    pull: if-not-exists
    image: node:14
    commands:
      - yarn install --frozen-lockfile
    when:
      branch: master
      event: [push, pull_request]
      
  ## - name: linting
  #   pull: if-not-exists
  #   image: node:14
  #   commands:
  #     - yarn run test:lint
  #   when:
  #     branch: master
  #     event: [push, pull_request]

  - name: build_image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      - n=0; while [ "$n" -lt 60 ] && [ ! docker stats --no-stream ]; do n=$(( n + 1 )); sleep 1; done
      - docker build --no-cache -t $${IMAGE_REPO}:$${DRONE_COMMIT_SHA} .
    volumes:
      - name: dockersock
        path: /var/run
    when:
      branch: master
      event: [push, pull_request]

  - name: image_to_quay
    pull: if-not-exists
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    environment:
      DOCKER_PASSWORD:
        from_secret: DOCKER_PASSWORD
    commands:
    - docker login -u="ukhomeofficedigital+ukhomeofficedigital_ims_resolver_robot" -p=$${DOCKER_PASSWORD} quay.io
    - docker tag $${IMAGE_REPO}:$${DRONE_COMMIT_SHA} $${IMAGE_URL}/$${IMAGE_REPO}:$${DRONE_COMMIT_SHA}
    - docker push $${IMAGE_URL}/$${IMAGE_REPO}:$${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: [push, pull_request]

  # - name: snyk_scan
  #   pull: if-not-exists
  #   image: node:14
  #   environment:
  #     SNYK_TOKEN:
  #       from_secret: snyk_token
  #   commands:
  #     - yarn run test:snyk
  #   when:
  #     branch:
  #       include:
  #         - master
  #     event: pull_request 

  - name: cron_build_image
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind
    commands:
      - docker build --no-cache -t $${IMAGE_REPO}:$${DRONE_COMMIT_SHA} .
    volumes:
      - name: dockersock
        path: /var/run
    when:
      cron: security_scans
      event: cron

  - name: cron_snyk_scan
    pull: if-not-exists
    image: node:14
    environment:
      SNYK_TOKEN:
        from_secret: snyk_token
    commands:
      - yarn install --frozen-lockfile
      - yarn run test:snyk
    when:
      cron: security_scans
      event: cron

  # Slack notification upon a CRON job fail
  - name: cron_notify_slack_tear_down_pr_envs
    pull: if-not-exists
    image: plugins/slack
    settings:
      channel: sas-build
      failure: ignore
      icon_url: http://readme.drone.io/0.5/logo_dark.svg
      icon.url: http://readme.drone.io/0.5/logo_dark.svg
      template: "CRON Job {{build.deployTo}} of ims Resolver has {{build.status}} - <{{build.link}}|#{{build.number}}> {{#success build.status}}\n  :thumbsup: :thumbsup: :thumbsup:\n{{else}}\n  :x: :x: :x:\n{{/success}} Author: {{build.author}}\n\nDuration: {{since job.started}}\n\nJob: <{{build.link}}|#{{build.number}}>\n\nCommit: {{build.commit}}\n"
      username: Drone
      webhook:
        from_secret: slack_webhook
    when:
      cron: tear_down_pr_envs
      event: cron
      status: failure

  - name: cron_notify_slack_security_scans
    pull: if-not-exists
    image: plugins/slack
    settings:
      channel: sas-build
      failure: ignore
      icon_url: http://readme.drone.io/0.5/logo_dark.svg
      icon.url: http://readme.drone.io/0.5/logo_dark.svg
      template: "CRON Job {{build.deployTo}} of ims Resolver has {{build.status}} - <{{build.link}}|#{{build.number}}> {{#success build.status}}\n  :thumbsup: :thumbsup: :thumbsup:\n{{else}}\n  :x: :x: :x:\n{{/success}} Author: {{build.author}}\n\nDuration: {{since job.started}}\n\nJob: <{{build.link}}|#{{build.number}}>\n\nCommit: {{build.commit}}\n"
      username: Drone
      webhook:
        from_secret: slack_webhook
    when:
      cron: security_scans
      event: cron
      status: failure

services:
  - name: docker
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/dind

volumes:
  - name: dockersock
    temp: {}
...
